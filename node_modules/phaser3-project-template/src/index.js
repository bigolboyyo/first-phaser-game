import 'phaser';
import { monsters } from 'phaser3-project-template/src/lib/figures/monsters';
import { basicMovement } from 'phaser3-project-template/src/lib/animations/movement';
import { updateFrame } from 'phaser3-project-template/src/lib/animations/updateFrame';
import { standardZoom } from 'phaser3-project-template/src/lib/camera/standardZoom';
import { spriteCreation } from 'phaser3-project-template/src/lib/spells/spriteCreation';

const squidMiniObj = monsters["squidMini"]

import "/home/grantwe/phaser/phaser-post-tutorial/node_modules/phaser3-project-template/src/index.css"

var config = {
    type: Phaser.AUTO,
    parent: 'phaser-example',
    width: 800,
    height: 600,
    physics: {
        default: 'arcade',
        arcade: {
            gravity: { y: 300 },
            debug: false
        }
    },
    scene: {
        preload: preload,
        create: create,
        update: update
    }
};

let cameras;
let keyboard

let platforms;
let mainFloor;

let cursors;

let miniSquid;
let zombie;


var game = new Phaser.Game(config);


function preload (){
    const load = this.load
    load.image('city', 'assets/canvas_bkg2.png')
    load.image('road', 'assets/road.png')
    load.image("zombie", 'assets/zombie_trio.gif')
    // load.spritesheet("squid", squidMiniObj.img, { frameWidth: 32, frameHeight: 32 })
    load.image("miniSquid", squidMiniObj.img)

}

function create (){
    const add = this.add
    const physics = this.physics.add
    add.image(400, 300, "city")
    
    platforms = this.physics.add.staticGroup();
    mainFloor = platforms.create(390,600, "road").refreshBody();
    const spritePool = []
    

    // spriteCreation(x, y, name, physics, platforms, movement)
    miniSquid = spriteCreation(400, 300, "miniSquid", physics, platforms, basicMovement)

    keyboard = this.input.keyboard
    cursors = keyboard.createCursorKeys();

    cameras = this.cameras.main
    standardZoom(cameras, miniSquid)

}


function update(){

updateFrame(miniSquid, cursors, keyboard)

}

