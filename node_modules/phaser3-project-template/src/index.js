import 'phaser';
import { monsters } from 'phaser3-project-template/src/lib/figures/monsters';
import { basicMovement } from 'phaser3-project-template/src/lib/animations/movement';
import { updateFrame } from 'phaser3-project-template/src/lib/animations/updateFrame';
const squidMiniObj = monsters["squidMini"]


var config = {
    type: Phaser.AUTO,
    parent: 'phaser-example',
    width: 800,
    height: 600,
    physics: {
        default: 'arcade',
        arcade: {
            gravity: { y: 300 },
            debug: false
        }
    },
    scene: {
        preload: preload,
        create: create,
        update: update
    }
};

let platforms;
let mainFloor;

let miniSquid;
let cursors;

var game = new Phaser.Game(config);

function preload (){
    this.load.image('city', 'assets/canvas_bkg2.png')
    this.load.image('road', 'assets/road.png')
    // this.load.spritesheet("squid", squidMiniObj.img, { frameWidth: 32, frameHeight: 32 })
    this.load.image("squid", squidMiniObj.img)

}

function create (){
    
    this.add.image(400, 300, "city")
    
    platforms = this.physics.add.staticGroup();
   mainFloor = platforms.create(390, 580, "road").refreshBody();

  
    
    miniSquid = this.physics.add.sprite(400, 300, "squid").setCollideWorldBounds(true);
    basicMovement(miniSquid)
    // debugger

    // this.input.keyboard.addKey({"mainAction": Phaser.Input.Keyboard.KeyCodes.F})
   
    cursors = this.input.keyboard.createCursorKeys();


    this.physics.add.collider(miniSquid, platforms)

   this.cameras.main.setBounds(0,0, 800, 600)
   this.cameras.main.startFollow(miniSquid, true)
   this.cameras.main.setZoom(2)
}


function update(){

updateFrame(miniSquid, cursors, this.input.keyboard)

}

