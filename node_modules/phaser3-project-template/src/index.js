import 'phaser';
import { monsters } from 'phaser3-project-template/src/lib/figures/monsters';
import { basicMovement } from 'phaser3-project-template/src/lib/animations/movement';
import { updateFrame } from 'phaser3-project-template/src/lib/animations/updateFrame';
import { standardZoom } from 'phaser3-project-template/src/lib/camera/standardZoom';
import { spriteCreation } from 'phaser3-project-template/src/lib/spells/spriteCreation';


const squidMiniObj = monsters["squidMini"]
const bigDemonObj = monsters["bigDemon"]

import {demonIdle} from "./lib/animations/demonAnims/demonIdle"



var config = {
    type: Phaser.AUTO,
    parent: 'phaser-example',
    width: 800,
    height: 600,
    physics: {
        default: 'arcade',
        arcade: {
            gravity: { y: 300 },
            debug: false
        }
    },
    scene: {
        preload: preload,
        create: create,
        update: update
    }
};

let cameras;
let keyboard

let platforms;
let mainFloor;

let cursors;

let squid;
let miniSquid;
let zombie;
let bigDemon;


var game = new Phaser.Game(config);




function preload (){
    const load = this.load
    load.image('city', 'assets/canvas_bkg2.png')
    load.image('road', 'assets/road.png')
    load.image("zombie", 'assets/zombie_trio.gif')
    // load.spritesheet("bigDemon", bigDemonObj.idleAnim, { frameWidth: 32, frameHeight: 32 })
    load.image("miniSquid", squidMiniObj.img)
    load.image("bigDemon", bigDemonObj.img)

    
    load.image("demonIdle1", bigDemonObj.idleAnim[0])
    load.image("demonIdle2", bigDemonObj.idleAnim[1])
    load.image("demonIdle3", bigDemonObj.idleAnim[2])
    load.image("demonIdle4", bigDemonObj.idleAnim[3])
    
    load.spritesheet("squid", "node_modules/phaser3-project-template/assets/squidMap.png", {frameWidth: 64, frameHeight: 64})
}

function create (){
    // utils
    const add = this.add
    const physics = this.physics.add
    const animation = this.anims

    // main camera
    cameras = this.cameras.main

    // add background
    add.image(400, 300, "city")
    
    // platforms 
    platforms = this.physics.add.staticGroup();
    mainFloor = platforms.create(390,600, "road").refreshBody();


    demonIdle(animation)

    const spritePool = []
    
    // spriteCreation(x, y, name, physics, platforms, movement)
    // miniSquid = spriteCreation(400, 300, "miniSquid", physics, platforms, basicMovement)
    bigDemon = spriteCreation(200, 200, "bigDemon", physics, platforms, basicMovement)
    bigDemon.play("demonIdle")
    
    // squid = spriteCreation(100, 100, "squid", physics, platforms, basicMovement)

    // physics.collider(miniSquid, bigDemon)
    
    keyboard = this.input.keyboard
    cursors = keyboard.createCursorKeys();

    standardZoom(cameras, squid)

    
}


function update(){
    
    updateFrame(squid, cursors, keyboard)

}

